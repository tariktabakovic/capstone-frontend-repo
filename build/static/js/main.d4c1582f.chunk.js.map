{"version":3,"sources":["actions/errorActions.js","actions/types.js","actions/authActions.js","components/auth/RegisterModal.js","components/auth/LoginModal.js","components/auth/Logout.js","components/AppNavBar.js","actions/thoughtActions.js","components/Square.js","components/Board.js","components/DeadPieces.js","Pieces/PieceClass.js","Pieces/Pawn.js","Pieces/Knight.js","Pieces/Bishop.js","Pieces/Rook.js","Pieces/Queen.js","Pieces/King.js","InitialBoard.js","components/Game.js","components/FetchLeaderboards.js","components/ThoughtPatterns.js","components/ThoughtModal.js","components/Welcome.js","reducers/thoughtReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","components/auth/LoginModalAttempt.js","App.js","serviceWorker.js","index.js"],"names":["returnErrors","msg","status","id","type","payload","clearErrors","login","email","password","dispatch","body","JSON","stringify","axios","post","headers","then","res","data","catch","err","response","tokenConfig","getState","token","auth","config","RegisterModal","state","modal","name","toggle","props","setState","onChange","e","target","value","onSubmit","preventDefault","newUser","register","prevProps","this","error","isAuthenticated","Button","onClick","style","margin","Modal","isOpen","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","Input","placeholder","className","marginTop","block","Component","connect","LoginModal","user","autoComplete","Logout","NavLink","logout","href","AppNavbar","authLinks","NavItem","guestLinks","Navbar","dark","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","setThoughtsLoading","Square","shade","Board","i","squareShade","squares","board","squareRows","j","isEven","push","renderSquare","num","DeadPieces","square","piece","whiteDeadPieces","map","ws","index","blackDeadPieces","bs","React","Piece","player","iconUrl","backgroundImage","Pawn","initialPositions","1","2","src","dest","isDestEnemyOccupied","indexOf","Knight","Bishop","Math","abs","pathStart","pathEnd","incrementBy","path","Rook","mod","diff","Queen","King","InitialBoard","Array","fill","Game","sourceSelection","turn","slice","backgroundColor","isMovePossible","srcToDestPath","getSrcToDestPath","isMoveLegal","console","log","isLegal","length","handleClick","ThoughtPattern","onDeleteClick","deleteThought","getThoughts","thoughts","thought","ListGroup","TransitionGroup","_id","CSSTransition","key","timeout","classNames","ListGroupItem","size","bind","get","delete","ThoughtModal","newThought","addThought","marginBottom","marginLeft","Welcome","initialState","loading","localStorage","getItem","isLoading","combineReducers","action","filter","setItem","removeItem","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","LoginModalAttempt","App","AppNavBar","ThoughtPatterns","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d4c1582f.chunk.js","sourcesContent":["import {CLEAR_ERRORS, GET_ERRORS} from './types';\n\n// Return errors\nexport const returnErrors = (msg, status, id = null) =>{\n    return{\n        type: GET_ERRORS,\n        payload: {msg, status, id}\n    }\n}\n\n// Clear errors\nexport const clearErrors = () => {\n    return {\n        type: CLEAR_ERRORS\n    };\n}","export const GET_THOUGHTS = 'GET_THOUGHTS';\nexport const ADD_THOUGHT = 'ADD_THOUGHT';\nexport const DELETE_THOUGHT = 'DELETE_THOUGHT';\nexport const THOUGHTS_LOADING = \"THOUGHTS_LOADING\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";","import axios from 'axios';\nimport {returnErrors} from './errorActions';\n\nimport {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL\n} from './types';\n\n// Check token & load user\nexport const loadUser = () => (dispatch, getState) => {\n    // User loading\n    dispatch({type: USER_LOADING});\n\n    axios\n        .get('/api/auth/user', tokenConfig(getState))\n        .then(res => dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        }))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status));\n            dispatch({\n                type: AUTH_ERROR\n            });\n        });\n}\n\n// Register User\nexport const register = ({name, email, password}) => dispatch => {\n    // Headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    // Request body\n    const body = JSON.stringify({name, email, password});\n\n    axios.post('/api/users', body, config)\n        .then(res => dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        }))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n            dispatch({\n                type: REGISTER_FAIL\n            });\n        });\n};\n\n// Login User\nexport const login = ({email, password}) => dispatch => {\n    // Headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n    // Request body\n    const body = JSON.stringify({email, password});\n\n    axios.post('/api/auth', body, config)\n        .then(res => dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        }))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'));\n            dispatch({\n                type: LOGIN_FAIL\n            });\n        });\n};\n\n// Logout User\nexport const logout = () => {\n    return {\n        type: LOGOUT_SUCCESS\n    };\n};\n\n// Setup config/headers and token\nexport const tokenConfig = getState => {\n    // Get token from localStorage\n    const token = getState().auth.token;\n\n    // Headers\n    const config = {\n        headers: {\n            \"Content-type\": \"application/json\"\n        }\n    }\n\n    // If token, then add to headers\n    if(token){\n        config.headers['x-auth-token'] = token;\n    }\n    return config;\n}","import React, {Component} from 'react';\nimport {\n    Button, \n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap';\nimport {Redirect, Link} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {register} from '../../actions/authActions';\nimport {clearErrors} from '../../actions/errorActions';\nimport '../../Welcome.css';\n\nclass RegisterModal extends Component{\n    state= {\n        modal: false,\n        name: '',\n        email: '',\n        password: '',\n        msg: null\n    };\n\n    static propTypes= {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        register: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps){\n        const {error, isAuthenticated} = this.props;\n        if(error !== prevProps.error){\n            // Check for register error\n            if(error.id === 'REGISTER_FAIL'){\n                this.setState({msg:error.msg.msg})\n            } else {\n                this.setState({msg: null});\n            }\n        }\n        // If register success, close modal\n        if(this.state.modal){\n            if(isAuthenticated){\n                this.toggle();\n            }\n        }\n    }\n\n    toggle = () =>{\n        // Clear errors\n        this.props.clearErrors();\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit = (e) =>{\n        e.preventDefault();\n\n        const {name, email, password} = this.state;\n\n        // Create user object\n        const newUser = {\n            name, \n            email,\n            password\n        };\n        \n        // Attempt to register\n        this.props.register(newUser);\n    }\n\n    render(){\n        return (\n            <div>\n                <Button \n                    onClick= {this.toggle}\n                    style= {{margin: '2px'}}>\n                    Register\n                </Button>\n                <Modal\n                    isOpen= {this.state.modal}\n                    toggle= {this.toggle}>\n                        <ModalHeader toggle = {this.toggle}>\n                            Register an account\n                        </ModalHeader>\n                        <ModalBody>\n                            {this.state.msg ? (<Alert color=\"danger\">{this.state.msg}</Alert>) : null}\n                            <Form onSubmit = {this.onSubmit}>\n                                <FormGroup>\n                                    <Label for= \"name\">Name</Label>\n                                    <Input \n                                    type= \"text\"\n                                    name= \"name\"\n                                    id= \"name\"\n                                    placeholder= \"Name\"\n                                    className= \"mb-3\"\n                                    onChange= {this.onChange}/>\n                                    \n                                    <Label for= \"email\">Email</Label>\n                                    <Input \n                                    type= \"email\"\n                                    name= \"email\"\n                                    id= \"email\"\n                                    placeholder= \"Email\"\n                                    className= \"mb-3\"\n                                    onChange= {this.onChange}/>\n                                    \n                                    <Label for= \"password\">Password</Label>\n                                    <Input \n                                    type= \"password\"\n                                    name= \"password\"\n                                    id= \"password\"\n                                    placeholder= \"Password\"\n                                    className= \"mb-3\"\n                                    onChange= {this.onChange}/>\n                                    <Button\n                                    color = \"dark\"\n                                    style= {{marginTop: '2rem'}}\n                                    block>\n                                        Register\n                                    </Button>\n                                </FormGroup>\n                            </Form>\n                        </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n})\n\nexport default connect(mapStateToProps, {register, clearErrors})(RegisterModal);","import React, {Component} from 'react';\nimport {\n    Button, \n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap';\nimport {Link, useHistory} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {login} from '../../actions/authActions';\nimport {clearErrors} from '../../actions/errorActions';\n\nexport class LoginModal extends Component{\n    state= {\n        modal: false,\n        email: '',\n        password: '',\n        msg: null\n    };\n\n    static propTypes= {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        login: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps){\n        const {error, isAuthenticated} = this.props;\n        if(error !== prevProps.error){\n            // Check for register error\n            if(error.id === 'LOGIN_FAIL'){\n                this.setState({msg:error.msg.msg})\n            } else {\n                this.setState({msg: null});\n            }\n        }\n        // If register success, close modal\n        if(this.state.modal){\n            if(isAuthenticated){\n                this.toggle();\n            }\n        }\n    }\n\n    toggle = () =>{\n        // Clear errors\n        this.props.clearErrors();\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit = (e) =>{\n        e.preventDefault();\n        const {email, password} = this.state;\n        const user = {\n            email,\n            password\n        }\n        // Attempt to login\n        this.props.login(user);\n    }\n  \n\n    render(){\n        return (\n            <div>\n                <Button \n                onClick= {this.toggle} \n                style= {{margin: '2px'}}>\n                    Login\n                </Button>\n                <Modal\n                    isOpen= {this.state.modal}\n                    toggle= {this.toggle}>\n                        <ModalHeader toggle = {this.toggle}>\n                            Login\n                        </ModalHeader>\n                        <ModalBody>\n                            {this.state.msg ? (<Alert color=\"danger\">{this.state.msg}</Alert>) : null}\n                            <Form onSubmit = {this.onSubmit}>\n                                <FormGroup>\n                                    <Label for= \"email\">Email</Label>\n                                    <Input \n                                    type= \"email\"\n                                    name= \"email\"\n                                    id= \"email\"\n                                    placeholder= \"Email\"\n                                    className= \"mb-3\"\n                                    autoComplete= \"on\"\n                                    onChange= {this.onChange}/>\n                                    \n                                    <Label for= \"password\">Password</Label>\n                                    <Input \n                                    type= \"password\"\n                                    name= \"password\"\n                                    id= \"password\"\n                                    placeholder= \"Password\"\n                                    className= \"mb-3\"\n                                    autoComplete= \"on\"\n                                    onChange= {this.onChange}/>\n                                    <Button\n                                    // to= \"/home\"\n                                    color = \"dark\"\n                                    style= {{marginTop: '2rem'}}\n                                    block>\n                                        Login\n                                    </Button>\n                                </FormGroup>\n                            </Form>\n                        </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n})\n\nexport default connect(mapStateToProps, {login, clearErrors})(LoginModal);","import React, { Component, Fragment } from 'react'\nimport {NavLink} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport {logout} from '../../actions/authActions';\nimport PropTypes from 'prop-types';\n\nexport class Logout extends Component{\n    static propTypes = {\n        logout: PropTypes.func.isRequired\n    };\n    render(){\n        return(\n            <Fragment>\n                <NavLink onClick={this.props.logout} href=\"#\">\n                    Logout\n                </NavLink>\n            </Fragment>\n        )\n    }\n}\n\nexport default connect(null, {logout})(Logout);\n","import React, { Component, Fragment } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Container\n} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport RegisterModal from './auth/RegisterModal';\nimport LoginModal from './auth/LoginModal';\nimport Logout from './auth/Logout';\n\nclass AppNavbar extends Component {\n   state = {\n        isOpen: false\n    }\n\n    static propTypes = {\n        auth: PropTypes.object.isRequired\n    }\n\n    toggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n    render(){\n        const {isAuthenticated, user} = this.props.auth;\n        const authLinks = (\n            <Fragment>\n                <NavItem>\n                    <span className= \"navbar-text mr-3\">\n                        <strong>{user ? `Welcome ${user.name}!`: ''}</strong>\n                    </span>\n                </NavItem>\n                <NavItem>\n                    <Logout/>\n                </NavItem>\n            </Fragment>\n        );\n\n        const guestLinks = (\n            <Fragment>\n                <NavItem>\n                    <RegisterModal />\n                </NavItem>\n                <NavItem>\n                    <LoginModal />\n                </NavItem>\n            </Fragment>\n        )\n        return (\n        <div>\n            <Navbar color= \"dark\" dark expand= \"sm\" className= \"mb-5\">\n            <Container>\n                <NavbarBrand href= \"/\"></NavbarBrand>\n                <NavbarToggler onClick= {this.toggle}>\n                </NavbarToggler>\n                <Collapse isOpen={this.state.isOpen} navbar>\n                    <Nav className= \"ml-auto\" navbar>\n                        {isAuthenticated ? authLinks : guestLinks}\n                    </Nav>\n                </Collapse>\n            </Container>\n            </Navbar>\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, null)(AppNavbar);","import axios from 'axios';\nimport {GET_THOUGHTS, ADD_THOUGHT, DELETE_THOUGHT, THOUGHTS_LOADING} from './types';\nimport {tokenConfig} from './authActions';\nimport {returnErrors} from './errorActions';\n\nexport const getThoughts = () => dispatch => {\n    dispatch(setThoughtsLoading());\n    axios \n        .get('/api/dailythoughts')\n        .then(res=>\n            dispatch({\n                type: GET_THOUGHTS,\n                payload: res.data\n                }))\n        .catch(err => \n            dispatch(returnErrors(err.response.data, err.response.status)))\n}\n\nexport const addThought = thought => (dispatch, getState) => {\n    axios\n        .post('/api/dailythoughts', thought, tokenConfig(getState))\n        .then(res =>\n            dispatch({\n                type: ADD_THOUGHT,\n                payload: res.data\n            }))  \n        .catch(err => \n            dispatch(returnErrors(err.response.data, err.response.status))) \n}\n\nexport const deleteThought = id => (dispatch, getState) => {\n    axios\n        .delete(`/api/dailythoughts/${id}`, tokenConfig(getState))\n        .then(res => dispatch({\n            type: DELETE_THOUGHT,\n            payload: id\n        }))\n    .catch(err => \n        dispatch(returnErrors(err.response.data, err.response.status)))\n}\n\n\nexport const setThoughtsLoading = () =>{\n    return {\n        type: THOUGHTS_LOADING\n    }\n}","import React from 'react';\nimport '../App.css';\n\nexport default function Square(props){\n    return (\n        <button className = {'square ' + props.shade}\n        onClick = {props.onClick}\n        style = {props.style}>\n        </button>\n    );\n}\n\n","import React, { Component } from 'react'\nimport '../App.css';\nimport Square from './Square.js';\n\nexport default class Board extends Component {\n    renderSquare(i, squareShade){\n        return <Square\n        style = {this.props.squares[i]? this.props.squares[i].style : null}\n        shade = {squareShade}\n        onClick = {()=> this.props.onClick(i)}\n        />\n    }\n    render() {\n        const board = [];\n        for(let i = 0; i < 8; i++){\n            const squareRows = [];\n            for(let j = 0; j< 8; j++){\n                const squareShade = (isEven(i) && isEven(j)) || (!isEven(i) && !isEven(j))? 'light-square' : 'dark-square';\n                squareRows.push(this.renderSquare((i*8) + j, squareShade)); \n            }\n            board.push(<div className = 'board-row' >{squareRows}</div>)\n        }\n        return (\n            <div>\n                {board}\n            </div>\n        )\n    }\n}\n\nfunction isEven(num){ \n    return num % 2 === 0\n}\n","import React from 'react';\nimport '../App.css';\nimport Square from './Square';\n\nexport default class DeadPieces extends React.Component {\n    renderSquare (square, i, squareShade){\n        return <Square \n        piece={square}\n        style= {square.style}\n        />\n    }\n    render(){\n        return(\n            <div>\n                <p>Pieces seized by player 2:</p>\n                <div className = 'board-row'>{this.props.whiteDeadPieces.map((ws,index) => this.renderSquare(ws,index))}\n                </div>\n                <p>Pieces seized by player 1:</p>\n                <div className = 'board-row'>{this.props.blackDeadPieces.map((bs, index) => this.renderSquare(bs,index))}\n                </div>\n            </div>\n        )\n    }\n}","export default class Piece{\n    constructor (player, iconUrl){\n        this.player= player;\n        this.style = {backgroundImage: \"url('\"+iconUrl +\"')\"};\n    }\n}","import Piece from './PieceClass';\n\n\nexport default class Pawn extends Piece {\n    constructor(player){\n        super(player, (player === 1? 'https://upload.wikimedia.org/wikipedia/commons/4/45/Chess_plt45.svg' : 'https://upload.wikimedia.org/wikipedia/commons/c/c7/Chess_pdt45.svg'))\n        this.initialPositions = {\n            1: [48, 49, 50, 51, 52, 53, 54, 55],\n            2: [8, 9, 10, 11, 12, 13, 14, 15]\n        }\n    }\n        isMovePossible(src, dest, isDestEnemyOccupied){\n            if(this.player === 1){\n                if((dest === src - 8 && !isDestEnemyOccupied || (dest === src - 16 && this.initialPositions[1].indexOf(src) !== -1))){\n                    return true;\n                }\n                else if (isDestEnemyOccupied && (dest === src - 9 || dest === src - 7)){\n                    return true;\n                }\n                }\n                else if(this.player === 2){\n                    if((dest === src + 8 && !isDestEnemyOccupied) || (dest === src + 16 && this.initialPositions[2].indexOf(src) !== -1)){\n                        return true;\n                }\n                else if(isDestEnemyOccupied && (dest === src + 9 || dest === src + 7)){\n                    return true;\n                }\n            }\n            return false;\n        }\n        getSrcToDestPath(src, dest){\n            if (dest === src - 16){\n                return [src - 8];\n            }\n            else if (dest === src + 16){\n                return [src + 8];\n            }\n            return [];\n    }\n}","import Piece from './PieceClass.js';\n\nexport default class Knight extends Piece {\n    constructor(player){\n        super(player, (player === 1? 'https://upload.wikimedia.org/wikipedia/commons/7/70/Chess_nlt45.svg' : 'https://upload.wikimedia.org/wikipedia/commons/e/ef/Chess_ndt45.svg'));\n    \n    }\n    isMovePossible(src, dest){\n        return (src - 17 === dest ||\n            src - 10 === dest ||\n            src + 6 === dest ||\n            src + 15 === dest ||\n            src - 15 === dest ||\n            src - 6 === dest ||\n            src + 10 === dest ||\n            src + 17 === dest);\n    }\n    getSrcToDestPath(){\n        return [];\n    }\n}","import React from 'react';\nimport Piece from './PieceClass.js';\nexport default class Bishop extends Piece {\n    constructor(player){\n        super(player, (player === 1? \"https://upload.wikimedia.org/wikipedia/commons/b/b1/Chess_blt45.svg\": \"https://upload.wikimedia.org/wikipedia/commons/9/98/Chess_bdt45.svg\"));\n    }\n    \n    isMovePossible(src, dest){\n        return (Math.abs(src-dest) % 9 === 0 || Math.abs(src - dest) % 7 === 0);\n    }\n    getSrcToDestPath(src, dest){\n        let path = [], pathStart, pathEnd, incrementBy;\n        if(src > dest){\n            pathStart = dest;\n            pathEnd = src;\n        }\n        else {\n            pathStart = src;\n            pathEnd = dest;\n        }\n        if(Math.abs(src - dest) & 9 ===0){\n            incrementBy = 9;\n            pathStart += 9;\n        }\n        else {\n            incrementBy = 7;\n            pathStart += 7;\n        }\n        for(let i = pathStart; i < pathEnd; i+=incrementBy){\n            path.push(i);\n        }\n        return path;\n    }\n}","import Piece from './PieceClass'; \n\nexport default class Rook extends Piece {\n    constructor(player){\n        super (player, (player === 1? 'https://upload.wikimedia.org/wikipedia/commons/7/72/Chess_rlt45.svg' : 'https://upload.wikimedia.org/wikipedia/commons/f/ff/Chess_rdt45.svg'));\n    }\n    isMovePossible(src, dest){\n        let mod = src % 8;\n        let diff = 8 - mod;\n        return (Math.abs(src - dest) % 8 ===0 || (dest >= (src - mod) && dest < (src + diff)));\n    }\n\n    getSrcToDestPath(src, dest){\n        let path = [], pathStart, pathEnd, incrementBy;\n        if(src > dest){\n            pathStart = dest;\n            pathEnd = src;\n        }\n        else {\n            pathStart = src;\n            pathEnd = dest;\n        }\n        if(Math.abs(src - dest) % 8 === 0){\n            incrementBy = 8;\n            pathStart += 8;\n        }\n        else {\n            incrementBy = 1;\n            pathStart += 1;\n        }\n        for(let i = pathStart; i < pathEnd; i += incrementBy){\n            path.push(i);\n        }\n        return path;\n    }\n}","import Piece from './PieceClass.js';\n\n\nexport default class Queen extends Piece {\n    constructor(player){\n        super(player, (player ===1? \"https://upload.wikimedia.org/wikipedia/commons/1/15/Chess_qlt45.svg\" : \"https://upload.wikimedia.org/wikipedia/commons/4/47/Chess_qdt45.svg\"))\n    }\n    isMovePossible(src, dest){\n        let mod = src % 8;\n        let diff = 8 - mod;\n        return (Math.abs(src-dest) % 9 === 0 || Math.abs(src- dest)% 7 ===0 ||\n        (Math.abs(src-dest) % 8 === 0 || (dest >= (src- mod) && dest< (src + diff))));\n    }\n    getSrcToDestPath(src, dest){\n        let path = [], pathStart, pathEnd, incrementBy;\n        if( src > dest){\n            pathStart= dest;\n            pathEnd = src;\n        }\n        else{\n            pathStart = src;\n            pathEnd = dest;\n        }\n        if (Math.abs(src - dest) % 8 === 0){\n            incrementBy = 8;\n            pathStart += 8;\n        }\n        else if(Math.abs(src-dest) % 9 === 0){\n            incrementBy = 9;\n            pathStart += 9;\n        }\n        else if(Math.abs(src - dest) % 7 === 0){\n            incrementBy = 7;\n            pathStart += 7;\n        }\n        else {incrementBy = 1;\n            pathStart += 1;\n        }\n        for (let i= pathStart; i<pathEnd ; i += incrementBy){\n            path.push(i);\n        }\n        return path;\n    }\n}\n","import Piece from './PieceClass.js';\nexport default class King extends Piece {\n    constructor (player){\n        super(player, (player ===1 ? 'https://upload.wikimedia.org/wikipedia/commons/4/42/Chess_klt45.svg' : 'https://upload.wikimedia.org/wikipedia/commons/f/f0/Chess_kdt45.svg'));\n    }\n    isMovePossible(src, dest){\n        return (\n            src - 9 === dest ||\n            src - 8 === dest ||\n            src - 7 === dest ||\n            src + 1 === dest ||\n            src + 9 === dest ||\n            src + 8 === dest ||\n            src - 1 === dest  );\n    }\n    getSrcToDestPath(src, dest){\n        return [];\n    }\n}","import Pawn from './Pieces/Pawn';\nimport Knight from './Pieces/Knight.js';\nimport Bishop from './Pieces/Bishop.js';\nimport Rook from './Pieces/Rook.js';\nimport Queen from './Pieces/Queen.js';\nimport King from './Pieces/King.js';\n\nexport default function InitialBoard(){\n    const squares = Array(64).fill(null);\n    for(let i = 8; i < 16; i++){\n        squares[i] = new Pawn(2);\n        squares[i+40] = new Pawn(1);\n    }\n    squares [0] = new Rook (2);\n    squares [7] = new Rook (2);\n    squares [56] = new Rook(1);\n    squares [63] = new Rook (1);\n\n    squares [1] = new Knight (2);\n    squares [6] = new Knight (2);\n    squares [57] = new Knight (1);\n    squares [62] = new Knight (1);\n\n    squares [2] = new Bishop (2);\n    squares [5] = new Bishop (2);\n    squares [58] = new Bishop (1);\n    squares [61] = new Bishop (1);\n\n    squares [3] = new Queen (2);\n    squares [4] = new King (2);\n    \n    squares [59] = new Queen (1);\n    squares [60] = new King(1);\n\n    return squares;\n}","import React from 'react';\nimport '../App.css';\nimport Board from './Board';\nimport DeadPieces from './DeadPieces.js';\nimport InitialBoard from '../InitialBoard.js';\nimport FetchLeaderboards from './FetchLeaderboards.js';\nexport default class Game extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            squares: InitialBoard(),\n            whiteDeadPieces: [],\n            blackDeadPieces: [],\n            player: 1,\n            sourceSelection: -1,\n            turn: 'white'\n        }\n    }\n\n    handleClick(i){\n        const squares = this.state.squares.slice();\n\n        if(this.state.sourceSelection === -1){\n            if(!squares[i] || squares[i].player !== this.state.player){\n                this.setState({status: 'Wrong player, it is player ' + this.state.player + ' turn to move'});\n                if (squares[i]){\n                    squares[i].style = {...squares[i].style, backgroundColor: ''};\n                }\n            }\n            else {\n                squares[i].style = {...squares[i].style, backgroundColor: 'RGB(111, 143, 114'};\n                this.setState({\n                    status: 'Choose a square',\n                    sourceSelection: i\n                });\n            }\n        }\n        else if(this.state.sourceSelection > -1){\n            squares [this.state.sourceSelection].style = {...squares[this.state.sourceSelection].style, backgroundColor: ''};\n            if(squares[i] && squares[i].player === this.state.player){\n                this.setState({\n                    status: 'Wrong player, choose another player',\n                    sourceSelection: -1\n                });\n            }\n        else {\n            const squares = this.state.squares.slice();\n            const whiteDeadPieces = this.state.whiteDeadPieces.slice();\n            const blackDeadPieces = this.state.blackDeadPieces.slice();\n            const isDestEnemyOccupied = squares[i]? true : false;\n            const isMovePossible = squares [this.state.sourceSelection].isMovePossible(this.state.sourceSelection, i, isDestEnemyOccupied);\n            const srcToDestPath = squares [this.state.sourceSelection].getSrcToDestPath(this.state.sourceSelection, i);\n            const isMoveLegal = this.isMoveLegal(srcToDestPath);\n\n            if(isMovePossible && isMoveLegal){\n                if(squares[i] !== null){\n                    if(squares[i].player ===1){\n                        whiteDeadPieces.push(squares[i]);\n                    }\n                    else{\n                        blackDeadPieces.push(squares[i]);\n                    }\n                }\n                    console.log('white dead pieces', whiteDeadPieces);\n                    console.log('black dead pieces', blackDeadPieces);\n                    squares[i]= squares[this.state.sourceSelection];\n                    squares[this.state.sourceSelection] = null;\n                    let player = this.state.player === 1? 2: 1;\n                    let turn = this.state.turn === 'white'? 'black' : 'white';\n                    this.setState({\n                        sourceSelection: -1, \n                        squares: squares,\n                        whiteDeadPieces: whiteDeadPieces,\n                        blackDeadPieces: blackDeadPieces,\n                        player: player,\n                        status: '',\n                        turn: turn\n                    });\n                }\n                else{\n                    this.setState({\n                        status: 'Wrong selection.',\n                        sourceSelection: -1\n                    });\n                }\n            }\n        }\n    }\n\n    isMoveLegal(srcToDestPath){\n        let isLegal = true;\n        for(let i = 0; i < srcToDestPath.length; i++){\n            if(this.state.squares[srcToDestPath[i]] !== null){\n                isLegal = false;\n            }\n        }\n        return isLegal;\n    }\n\n\n    render() {\n        \n        return(\n        <div>\n            <div className = 'game'>\n                <div className = 'game-board'>\n                    <Board squares= {this.state.squares}\n                    onClick = {(i) => this.handleClick(i)}\n                    />\n                </div>\n                <div className = 'game-info'>\n                    <h3>Below is whose turn it is:</h3>\n                    <div id = 'player-turn-box' style = {{backgroundColor: this.state.turn}}>\n                </div>\n                <div className = 'game-status'>{this.state.status}</div>\n                <div className = 'dead-pieces'>\n                    {<DeadPieces\n                    whiteDeadPieces = {this.state.whiteDeadPieces}\n                    blackDeadPieces = {this.state.blackDeadPieces}\n                    />\n                    }\n                </div>\n                </div>\n                {/* <div className = 'leader-board'>\n                    <FetchLeaderboards\n                    />\n                </div> */}\n            </div>\n        </div>\n        );\n    }\n}\n","import React from 'react';\n\nexport default class FetchLeaderBoards extends React.Component {\n\n    state = {\n        loading: true,\n        rank1: null,\n        rank2: null,\n        rank3: null,\n        rank4: null,\n        rank5: null\n    }\n\n    async componentDidMount() {\n        const url = 'https://api.chess.com/pub/leaderboards';\n        const response = await fetch(url);\n        const data = await response.json();\n        this.setState({\n            rank1: data.daily[0], loading: false,\n            rank2: data.daily[1], loading: false,\n            rank3: data.daily[2], loading: false,\n            rank4: data.daily[3], loading: false,\n            rank5: data.daily[4], loading: false\n        });\n        \n        console.log(this.state.rank2);\n        console.log(this.state.rank1);\n        console.log(this.state.rank3);\n\n    }\n    \n    render () {\n        return (\n        <div className = 'top5'>\n\n            <div>\n                {this.state.loading || !this.state.rank1? (\n                    <div>loading...</div> \n                    ) : ( \n                        <div>\n                    <div>Rank: {this.state.rank1.rank}</div>\n                    <div>Username: {this.state.rank1.username}</div>\n                    <div>Score: {this.state.rank1.score}</div>\n                    <div>\n                        <img src = {this.state.rank1.avatar} height= '70px' width= '70px'/>\n                    </div>\n                </div>\n                )}\n            </div>\n            <div>\n                {this.state.loading || !this.state.rank2? (\n                    <div>loading...</div>\n                    ) : (\n                        <div>\n                    <div>Rank: {this.state.rank2.rank}</div>\n                    <div>Username: {this.state.rank2.username}</div>\n                    <div>Score: {this.state.rank2.score}</div>\n                    <div>\n                        <img src = {this.state.rank2.avatar} height= '70px' width= '70px'/>\n                    </div>\n                </div>\n                )}\n            </div>\n            <div>\n                {this.state.loading || !this.state.rank3? (\n                    <div>loading...</div>\n                    ) : (\n                        <div>\n                    <div>Rank: {this.state.rank3.rank}</div>\n                    <div>Username: {this.state.rank3.username}</div>\n                    <div>Score: {this.state.rank3.score}</div>\n                    <div> \n                        <img src = {this.state.rank3.avatar} height= '70px' width= '70px'/>\n                    </div>\n                </div>\n                )}\n            </div>\n            <div>\n                {this.state.loading || !this.state.rank4? (\n                    <div>loading...</div>\n                    ) : (\n                        <div>\n                    <div>Rank: {this.state.rank4.rank}</div>\n                    <div>Username: {this.state.rank4.username}</div>\n                    <div>Score: {this.state.rank4.score}</div>\n                    <div> \n                        <img src = {this.state.rank4.avatar} height= '70px' width= '70px'/>\n                    </div>\n                </div>\n                )}\n            </div>\n            <div>\n                {this.state.loading || !this.state.rank5? (\n                    <div>loading...</div>\n                    ) : (\n                        <div>\n                    <div>Rank: {this.state.rank5.rank}</div>\n                    <div>Username: {this.state.rank5.username}</div>\n                    <div>Score: {this.state.rank5.score}</div>\n                    <div> \n                        <img src = {this.state.rank5.avatar} height= '70px' width= '70px'/>\n                    </div>\n                </div>\n                )}\n            </div>\n        </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {Container, ListGroup, ListGroupItem, Button} from 'reactstrap';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\nimport uuid from 'uuid';\nimport {connect} from 'react-redux';\nimport {getThoughts, deleteThought} from '../actions/thoughtActions';\nimport PropTypes from 'prop-types';\nimport Game from '../components/Game';\n\nclass ThoughtPattern extends Component {\n    \n    static propTypes = {\n        getThoughts: PropTypes.func.isRequired,\n        thought: PropTypes.object.isRequired,\n        isAuthenticated: PropTypes.bool\n    }\n    \n    componentDidMount(){\n        this.props.getThoughts();\n    }\n\n    onDeleteClick = (id) => {\n        this.props.deleteThought(id);\n    }\n    \n    render(){\n        const {thoughts} = this.props.thought;\n        return(\n            <Container>\n                {this.props.isAuthenticated? \n                \n                <ListGroup>\n                    {/* <Game/> */}\n                    <TransitionGroup className= \"thought-list\">\n                        {thoughts.map(({_id, name})=> (\n                            <CSSTransition key={_id} timeout= {500} classNames=\"fade\">\n                                <ListGroupItem>\n                                    <Button className= \"remove-btn\"\n                                    color=\"dark\"\n                                    size=\"sm\"\n                                    onClick={this.onDeleteClick.bind(this, _id)}\n                                    style= {{margin: '2px'}}\n                                    >&times;</Button>\n                                    {name}\n                                </ListGroupItem>\n                            </CSSTransition>\n                        ))}\n                    </TransitionGroup>\n                    <Game></Game> \n                </ListGroup> \n                    : null }\n            </Container>\n        );\n    }\n}\n\nconst mapStateToProps= (state) =>({\n    thought: state.thought,\n    isAuthenticated: state.auth.isAuthenticated\n});\nexport default connect(mapStateToProps, {getThoughts, deleteThought})(ThoughtPattern);\n","import React, {Component, Fragment} from 'react';\nimport {\n    Button, \n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input\n} from 'reactstrap';\n\nimport {connect} from 'react-redux';\nimport {addThought} from '../actions/thoughtActions';\nimport PropTypes from 'prop-types';\n\nclass ThoughtModal extends Component{\n    state= {\n        modal: false,\n        name: ''\n    };\n\n    static propTypes = {\n        isAuthenticated: PropTypes.bool\n    }\n\n    toggle = () =>{\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit = (e) =>{\n        e.preventDefault();\n        const newThought = {\n            name: this.state.name\n        }\n\n        // Add thought via addThought action\n        this.props.addThought(newThought);\n\n        // Close modal\n        this.toggle();\n    }\n\n    render(){\n        return (\n            <Fragment>\n                <h4 className= \"ml-4\">WhoIsGrandmaster?</h4>\n            <div>\n                {this.props.isAuthenticated ?(\n                <Button\n                color= \"dark\"\n                style= {{marginBottom: \"2rem\"}}\n                style= {{marginLeft: \"1.5rem\"}}\n                onClick= {this.toggle}>\n                    Record your daily thoughts\n        </Button> ):( \n        <h4 className = \"mb-3 ml-4\">Please log in to access app</h4> )}\n                <Modal\n                    isOpen= {this.state.modal}\n                    toggle= {this.toggle}>\n                        <ModalHeader toggle = {this.toggle}>\n                            Record your daily thoughts\n                        </ModalHeader>\n                        <ModalBody>\n                            <Form onSubmit = {this.onSubmit}>\n                                <FormGroup>\n                                    <Label for= \"thought\"></Label>\n                                    <Input \n                                    type= \"text\"\n                                    name= \"name\"\n                                    id= \"thought\"\n                                    placeholder= \"Record your daily thoughts\"\n                                    onChange= {this.onChange}/>\n                                    <Button\n                                    color = \"dark\"\n                                    style= {{marginTop: '2rem'}}\n                                    block>\n                                        Add Thought\n                                    </Button>\n                                </FormGroup>\n                            </Form>\n                        </ModalBody>\n                </Modal>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    thought: state.thought,\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, {addThought})(ThoughtModal);","import React, { Component, Fragment } from 'react';\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    Container,\n    Button\n} from 'reactstrap';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport RegisterModal from './auth/RegisterModal';\nimport LoginModal from './auth/LoginModal';\nimport Logout from './auth/Logout';\nimport '../Welcome.css';\nclass Welcome extends Component {\n\n    static propTypes = {\n        auth: PropTypes.object.isRequired\n    }\n\n    render(){\n        const {isAuthenticated, user} = this.props.auth;\n        const guestLinks = (\n            <Fragment>\n                <Button>\n                    <RegisterModal />\n                </Button>\n                <br></br>\n                <Button>\n                    <LoginModal />\n                </Button>\n            </Fragment>\n        )\n        return (\n        <div className= \"login-box\">\n            <Container className= \"welcome-buttons\">\n                {guestLinks}\n            </Container>\n        </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, null)(Welcome);","import {GET_THOUGHTS, ADD_THOUGHT, DELETE_THOUGHT, THOUGHTS_LOADING} from '../actions/types';\n\nconst initialState= {\n    thoughts: [],\n    loading: false\n}\n\nexport default function(state= initialState, action){\n    switch(action.type){\n        case GET_THOUGHTS:\n            return {\n                ...state,\n                thoughts: action.payload,\n                loading: false\n        };\n        case DELETE_THOUGHT:\n            return {\n                ...state,\n                thoughts: state.thoughts.filter(thought => thought._id !== action.payload)\n            };\n        case ADD_THOUGHT:\n            return{\n                ...state,\n                thoughts: [action.payload, ...state.thoughts]\n            };\n            case THOUGHTS_LOADING:\n                return{\n                    ...state,\n                    loading: true\n                }\n        default:\n            return state;\n    }\n}","import {GET_ERRORS, CLEAR_ERRORS}from '../actions/types';\n\nconst initialState= {\n    msg: {},\n    status: null,\n    id: null\n}\n\nexport default function (state= initialState, action){\n    switch(action.type){\n        case GET_ERRORS:\n            return {\n                msg: action.payload.msg,\n                status: action.payload.status,\n                id: action.payload.id\n            }\n        case CLEAR_ERRORS:\n            return {\n                msg: {},\n                status: null,\n                id: null,\n            }\n        default: \n            return state\n    }\n}","import {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL\n} from '../actions/types'\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    isLoading: false,\n    user: null\n}\n\nexport default function (state= initialState, action){\n    switch(action.type){\n        case USER_LOADING:\n            return {\n                ...state,\n                isLoading: true\n            };\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                isLoading: false,\n                user: action.payload\n        };\n        case LOGIN_SUCCESS:\n        case REGISTER_SUCCESS:\n            localStorage.setItem('token', action.payload.token)\n            return{\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                isLoading: false\n        };\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT_SUCCESS:\n        case REGISTER_FAIL:\n            localStorage.removeItem('token');\n            return{\n                ...state,\n                token: null,\n                user: null,\n                isAuthenticated: false,\n                isLoading: false\n            }\n            default: \n            return state;\n    }\n}","import {combineReducers} from 'redux';\nimport thoughtReducer from './thoughtReducer';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n    thought: thoughtReducer,\n    error: errorReducer,\n    auth: authReducer\n})","import {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer, \n    initialState, \n    composeEnhancers(\n    applyMiddleware(...middleware),\n    // window._REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nexport default store;","import React, {Component} from 'react';\nimport {\n    Button, \n    Modal,\n    ModalHeader,\n    ModalBody,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    NavLink,\n    Alert\n} from 'reactstrap';\n\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {login} from '../../actions/authActions';\nimport {clearErrors} from '../../actions/errorActions';\n\nexport class LoginModalAttempt extends Component{\n    state= {\n        modal: false,\n        email: '',\n        password: '',\n        msg: null\n    };\n\n    static propTypes= {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        login: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps){\n        const {error, isAuthenticated} = this.props;\n        if(error !== prevProps.error){\n            // Check for register error\n            if(error.id === 'LOGIN_FAIL'){\n                this.setState({msg:error.msg.msg})\n            } else {\n                this.setState({msg: null});\n            }\n        }\n        // If register success, close modal\n        if(this.state.modal){\n            if(isAuthenticated){\n                this.toggle();\n            }\n        }\n    }\n\n    toggle = () =>{\n        // Clear errors\n        this.props.clearErrors();\n        this.setState({\n            modal: !this.state.modal\n        });\n    }\n\n    onChange = (e) =>{\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit = (e) =>{\n        e.preventDefault();\n        const {email, password} = this.state;\n        const user = {\n            email,\n            password\n        }\n        // Attempt to login\n        this.props.login(user);\n    }\n\n    render(){\n        return (\n            <div>\n                <Button onClick= {this.toggle} href=\"#\">\n                    Login\n                </Button>\n                <Modal\n                    isOpen= {this.state.modal}\n                    toggle= {this.toggle}>\n                        <ModalHeader toggle = {this.toggle}>\n                            Login\n                        </ModalHeader>\n                        <ModalBody>\n                            {this.state.msg ? (<Alert color=\"danger\">{this.state.msg}</Alert>) : null}\n                            <Form onSubmit = {this.onSubmit}>\n                                <FormGroup>\n                                    <Label for= \"email\">Email</Label>\n                                    <Input \n                                    type= \"email\"\n                                    name= \"email\"\n                                    id= \"email\"\n                                    placeholder= \"Email\"\n                                    className= \"mb-3\"\n                                    onChange= {this.onChange}/>\n                                    \n                                    <Label for= \"password\">Password</Label>\n                                    <Input \n                                    type= \"password\"\n                                    name= \"password\"\n                                    id= \"password\"\n                                    placeholder= \"Password\"\n                                    className= \"mb-3\"\n                                    onChange= {this.onChange}/>\n                                    <Button\n                                    color = \"dark\"\n                                    style= {{marginTop: '2rem'}}\n                                    block>\n                                        Login\n                                    </Button>\n                                </FormGroup>\n                            </Form>\n                        </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n})\n\nexport default connect(mapStateToProps, {login, clearErrors})(LoginModalAttempt);","import React from 'react';\nimport AppNavBar from './components/AppNavBar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ThoughtPatterns from './components/ThoughtPatterns';\nimport ThoughtModal from './components/ThoughtModal';\nimport {Container} from 'reactstrap';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Route, Switch} from 'react-router-dom';\nimport Welcome from './components/Welcome';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport {loadUser} from './actions/authActions'\nimport {LoginModalAttempt} from './components/auth/LoginModalAttempt';\nimport {LoginModal} from './components/auth/LoginModal';\nimport Game from './components/Game.js';\nclass App extends React.Component {\n  componentDidMount(){\n    store.dispatch(loadUser());\n  }\n  \n  render(){\n    return(\n      <Provider store={store}>\n        {/* <Router> */}\n          {/* <Switch> */}\n          <div className = \"App\">\n            {/* <Route exact path= \"/\" component={AppNavBar}></Route> */}\n            <AppNavBar/>\n            {/* <Route exact path= \"/home\" render={(routeProps)=>(<Container><ThoughtModal/><ThoughtPatterns/></Container>)}/> */}\n            <Container>\n              {/* <Game/> */}\n              <ThoughtModal/>\n              <ThoughtPatterns/>\n            </Container> \n            </div>\n          {/* </Switch> */}\n        {/* // </Router> */}\n      </Provider>\n    )}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport * as serviceWorker from './serviceWorker';\nimport '../src/Welcome.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}